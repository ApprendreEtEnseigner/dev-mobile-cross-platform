// //! -------------------------------------DECOUPER UNE CHAINE----------------------------------------------------

// Il existe plusieurs m√©thodes en JavaScript pour d√©couper une cha√Æne de caract√®res selon un motif ou un indice. Voici quelques exemples :

// - La m√©thode **split()** divise une cha√Æne de caract√®res en une liste ordonn√©e de sous-cha√Ænes, place ces sous-cha√Ænes dans un tableau et retourne le tableau. La division est effectu√©e en recherchant un motif ; o√π le motif est fourni comme premier param√®tre dans l'appel de la m√©thode¬π.
// - La m√©thode **slice()** extrait une section d'une cha√Æne de caract√®res et la retourne comme une nouvelle cha√Æne de caract√®res. La cha√Æne de caract√®res courante n'est pas modifi√©e. On peut sp√©cifier un indice de d√©but et un indice de fin pour d√©limiter la section √† extraire¬≤.
// - La m√©thode **substring()** retourne une sous-cha√Æne de la cha√Æne courante, entre un indice de d√©but et un indice de fin. Cette m√©thode est similaire √† slice(), sauf qu'elle ne prend pas en compte les indices n√©gatifs¬≥.

// Pour utiliser la m√©thode **split()** en JavaScript, il faut appeler cette m√©thode sur une cha√Æne de caract√®res en passant un motif ou un s√©parateur en param√®tre. La m√©thode retourne un tableau contenant les sous-cha√Ænes obtenues en divisant la cha√Æne selon le motif ou le s√©parateur. Par exemple :

// ```js
// var chaine = "Bonjour le monde";
// var tableau = chaine.split(" "); // on utilise l'espace comme s√©parateur
// console.log(tableau); // affiche ["Bonjour", "le", "monde"]
// ```

// On peut aussi passer une expression r√©guli√®re comme motif pour diviser la cha√Æne selon un crit√®re plus complexe. Par exemple :

// ```js
// var chaine = "12-34-56-78";
// var tableau = chaine.split(/-/); // on utilise le tiret comme motif
// console.log(tableau); // affiche ["12", "34", "56", "78"]
// ```

// On peut √©galement sp√©cifier une limite sur le nombre de sous-cha√Ænes √† inclure dans le tableau. Par exemple :

// ```js
// var chaine = "a-b-c-d-e-f-g";
// var tableau = chaine.split("-", 3); // on utilise le tiret comme s√©parateur et on limite √† 3 √©l√©ments
// console.log(tableau); // affiche ["a", "b", "c"]
// ```

// Vous pouvez consulter les liens suivants pour plus de d√©tails et d'exemples sur la m√©thode split() :

// ¬π: [String.prototype.split() - JavaScript | MDN](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/String/split)
// ¬≤: [javascript - How to use split? - Stack Overflow](https://stackoverflow.com/questions/2555794/how-to-use-split)
// ¬≥: [La m√©thode split() en Javascript - Analyste Programmeur](https://www.analyste-programmeur.com/javascript/les-expressions-regulieres/javascript-split)

// Source: Conversation with Bing, 7/14/2023
// (1) javascript - How to use split? - Stack Overflow. https://stackoverflow.com/questions/2555794/how-to-use-split.
// (2) String.prototype.split() - JavaScript | MDN - MDN Web Docs. https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Global_Objects/String/split.
// (3) String.prototype.split() - JavaScript | MDN - MDN Web Docs. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split.
// (4) La m√©thode split() en Javascript - Analyste Programmeur. https://www.analyste-programmeur.com/javascript/les-expressions-regulieres/javascript-split.

// //! -------------------------------------RENVERSER UNE CHAINE----------------------------------------------------
// Il existe plusieurs m√©thodes pour inverser une cha√Æne de caract√®res en JavaScript. Voici quelques exemples:

// - Utiliser les fonctions int√©gr√©es `split()`, `reverse()` et `join()`¬≤¬π. Par exemple:

// ```javascript
// function reverseString(str) {
//   return str.split("").reverse().join("");
// }

// console.log(reverseString("bonjour")); // ruojnob
// ```

// - Utiliser une boucle en d√©cr√©mentation¬≤. Par exemple:

// ```javascript
// function reverseString(str) {
//   var newString = "";
//   for (var i = str.length - 1; i >= 0; i--) {
//     newString += str[i];
//   }
//   return newString;
// }

// console.log(reverseString("bonjour")); // ruojnob
// ```

// - Utiliser la r√©cursion¬≤. Par exemple:

// ```javascript
// function reverseString(str) {
//   if (str === "") {
//     return "";
//   } else {
//     return reverseString(str.substr(1)) + str[0];
//   }
// }

// console.log(reverseString("bonjour")); // ruojnob
// ```

// J'esp√®re que cela vous a √©t√© utile. üòä

// Source: Conversation with Bing, 7/14/2023
// (1) Trois fa√ßons d'inverser une chaine de caract√®res dans JavaScript. https://www.freecodecamp.org/french/news/trois-facons-d-inverser-une-chaine-de-caracteres-dans-javascript/.
// (2) Inverser une cha√Æne en JavaScript | Delft Stack. https://www.delftstack.com/fr/howto/javascript/reverse-string-javascript/.
// (3) Comment inverser une cha√Æne de caract√®res en Javascript. https://waytolearnx.com/2019/09/comment-inverser-une-chaine-de-caracteres-en-javascript.html.
// (4) Inverser une cha√Æne en JavaScript - Techie Delight. https://www.techiedelight.com/fr/reverse-string-javascript/.